    /* CSS Reset */

    * {
        padding: 0px;
        margin: 0px;
    }

    *,
    *:before,
    *:after {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
    }

    html,
    body,
    div,
    input,
    span,
    object,
    button,
    iframe,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    blockquote,
    pre,
    a,
    abbr,
    acronym,
    address,
    code,
    del,
    dfn,
    em,
    img,
    q,
    dl,
    dt,
    dd,
    ol,
    ul,
    li,
    fieldset,
    form,
    label,
    legend,
    table,
    caption,
    tbody,
    tfoot,
    thead,
    tr,
    th,
    td {
        border: 0px;
        font-weight: inherit;
        font-style: inherit;
        font-size: 100%;
        outline: none;
        font-family: inherit;
        vertical-align: baseline;
    }

    article,
    aside,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    nav,
    section {
        display: block;
    }

    table {
        border-collapse: separate;
        border-spacing: 0;
    }

    table,
    td,
    th {
        vertical-align: top;
    }

    blockquote:before,
    blockquote:after,
    q:before,
    q:after {
        content: "";
    }

    blockquote,
    q {
        quotes: "" "";
    }

     :focus {
        outline: none;
    }

    ul {
        list-style: none;
    }
button, input, select, textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}
    input[type=submit],
    button {
        cursor: pointer;
        -webkit-appearance: none;
    }

     ::-ms-clear {
        display: none;
    }

   

    .no-user-select {
        -webkit-user-select: none;
        /* Chrome all / Safari all */
        -moz-user-select: none;
        /* Firefox all */
        -ms-user-select: none;
        /* IE 10+ */
        user-select: none;
        /* Likely future */
    }
    /*
 * Gridism
 * A simple, responsive, and handy CSS grid by @cobyism
 * https://github.com/cobyism/gridism
 */
    /* Preserve some sanity */

    .grid,
    .grid__item {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
    /* Set up some rules to govern the grid */

    .grid {
        display: block;
        clear: both;
        font-size: 0;
        padding: 0;
    }

    .grid__item {
        display: inline-block;
        vertical-align: top;
        width: 100%;
        padding: 10px;
        font-size: 1.6rem;
        /* hard coded */
    }
    /* This ensures the outer gutters are equal to the (doubled) inner gutters. */
    /*  .grid .grid__item:first-child {
        padding-left: 20px;
    }

    .grid .grid__item:last-child {
        padding-right: 20px;
    }*/
    /* Nested grids already have padding though, so let’s nuke it */

    .grid__item .grid__item:first-child {
        padding-left: 0;
    }

    .grid__item .grid__item:last-child {
        padding-right: 0;
    }

    .grid__item .grid:first-child>.grid__item {
        padding-top: 0;
    }

    .grid__item .grid:last-child>.grid__item {
        padding-bottom: 0;
    }
    /* Let people nuke the gutters/padding completely in a couple of ways */

    .grid--no-gutters .grid__item,
    .grid__item--no-gutters {
        padding: 0 !important;
    }
    /* Wrapping at a maximum width is optional */

    .grid--wrapped {
        max-width: 1200px;
        margin: 0 auto;
    }
    /* Width classes also have shorthand versions numbered as fractions
 * For example: for a grid unit 1/3 (one third) of the parent width,
 * simply apply class="w-1-3" to the element. */

    .grid__item--whole {
        width: 100%;
    }

    .grid__item--half {
        width: 50%;
    }

    .grid__item--one-third {
        width: 33.3332%;
    }

    .grid__item--two-thirds {
        width: 66.6665%;
    }

    .grid__item--one-quarter {
        width: 25%;
    }

    .grid__item--three-quarters {
        width: 75%;
    }

    .grid__item--one-fifth {
        width: 20%;
    }

    .grid__item--two-fifths {
        width: 40%;
    }

    .grid__item--three-fifths {
        width: 60%;
    }

    .grid__item--four-fifths {
        width: 80%;
    }
    /* Utility classes */

    .grid__item--align-center {
        text-align: center;
    }

    .grid__item--align-left {
        text-align: left;
    }

    .grid__item--align-right {
        text-align: right;
    }

    .grid__item--pull-left {
        float: left;
    }

    .grid__item--pull-right {
        float: right;
    }
    /* Responsive Stuff */

    @media screen and (max-width: 800px) {
        /* Stack anything that isn’t full-width on smaller screens */
        .grid__item {
            display: block;
            width: 100% !important;
            /*            padding-left: 20px;
            padding-right: 20px;*/
        }
        .grid__item .grid__item {
            padding-left: 0;
            padding-right: 0;
        }
        /* REVISE NAMING */
        .grid__item--centered-on-mobiles {
            text-align: center !important;
        }
        .grid__item--hidden-on-mobiles {
            display: none !important;
        }
    }
    /* Expand the wrap a bit further on larger screens */
    /* General Classes */

    .clearfix:after {
        content: " ";
        display: block;
        clear: both;
    }
    /*
 * Let's target IE to respect aspect ratios and sizes for img tags containing SVG files
 *
 * [1] IE9
 * [2] IE10+
 */
    /* 1 */

    .ie9 img[src$=".svg"] {
        width: 100%;
    }
    /* 2 */

    @media screen and (-ms-high-contrast: active),
    (-ms-high-contrast: none) {
        img[src$=".svg"] {
            width: 100%;
        }
    }

    svg:not(:root) {
        overflow: hidden
    }

    .hidden{
        display: none !important;
    }